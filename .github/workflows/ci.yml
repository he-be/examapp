# ワークフローの名前
name: CI/CD Pipeline - Cloudflare Workers

# ワークフローが実行されるタイミングを定義
on:
  # mainブランチにプッシュされた時
  push:
    branches: [ "main" ]
  # mainブランチに向けたプルリクエストが作成・更新された時
  pull_request:
    branches: [ "main" ]

# 同じブランチの実行中のワークフローをキャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 実行される一連のタスク（ジョブ）を定義
jobs:
  # 品質チェック、テスト、ビルド、デプロイを実行する統合ジョブ
  ci:
    name: CI Pipeline
    # ジョブを実行する仮想環境の種類
    runs-on: self-hosted

    # ジョブ内のステップ（実行されるコマンド）
    steps:
      # 1. リポジトリのコードを仮想環境にチェックアウトする
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js環境をセットアップする
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # 使用するNode.jsのバージョンを指定
          node-version: '20.x'

      # 3. node_modulesのキャッシュ（ローカルキャッシュ使用）
      - name: Cache node_modules
        uses: corca-ai/local-cache@v2
        with:
          path: node_modules
          key: deps-${{ hashFiles('package-lock.json') }}
          base: /tmp/cache

      # 4. ビルド成果物のキャッシュ（ローカルキャッシュ使用）
      - name: Cache build artifacts
        uses: corca-ai/local-cache@v2
        with:
          path: dist
          key: build-${{ github.sha }}
          base: /tmp/cache

      # 5. Playwrightブラウザのキャッシュは一時的に無効化
      # corca-ai/local-cache@v2 はパス展開に問題があるため
      # - name: Cache Playwright browsers
      #   uses: corca-ai/local-cache@v2
      #   id: playwright-cache
      #   with:
      #     path: ~/.cache/ms-playwright
      #     key: playwright-${{ hashFiles('**/package-lock.json') }}
      #     base: /tmp/cache

      # 6. 依存関係をインストールする（高速化オプション付き）
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      # 7. 品質チェックを並列実行する
      - name: Run quality checks in parallel
        run: |
          npm run lint &
          npm run typecheck &
          npm run format:check &
          wait

      # 8. 単体テストとカバレッジを実行する
      - name: Run tests with coverage
        run: npm run test:coverage

      # 10. カバレッジレポートをPRにコメントする（プルリクエストのみ）
      - name: Coverage Report
        if: github.event_name == 'pull_request'
        uses: davelosert/vitest-coverage-report-action@v2

      # 11. Playwrightブラウザのインストール
      - name: Install Playwright browsers
        run: npx playwright install chromium

      # 12. プロジェクトのビルド
      - name: Build project
        run: npm run build

      # 13. E2Eテストを実行する
      - name: Run E2E tests
        run: npx playwright test
        env:
          CI: true

      # 14. Cloudflare Workers へのデプロイ（mainブランチのみ）
      - name: Deploy to Cloudflare Workers
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
