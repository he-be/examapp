name: CI/CD Pipeline - Optimized

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Cancel in-progress runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Single job that handles everything to minimize overhead
  ci:
    name: CI Pipeline
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js with caching
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # Cache Playwright browsers
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      # Cache Vite build output
      - name: Cache Vite build
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-vite-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vite-build-

      # Single npm ci for all dependencies
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      # Run all checks in parallel
      - name: Run quality checks in parallel
        run: |
          npm run lint &
          npm run typecheck &
          npm run format:check &
          wait

      # Run unit tests without coverage for speed (coverage only on main)
      - name: Run unit tests
        run: npm run test:unit

      # Only run coverage on main branch or if explicitly requested
      - name: Run tests with coverage
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'coverage')
        run: npm run test:coverage

      - name: Coverage Report
        if: github.event_name == 'pull_request' && (github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'coverage'))
        uses: davelosert/vitest-coverage-report-action@v2

      # Install Playwright browsers only if not cached
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      # Build once and reuse for E2E tests
      - name: Build project
        run: npm run build

      # Run E2E tests with the built artifacts
      - name: Run E2E tests
        run: playwright test
        env:
          CI: true

      # Deploy to Cloudflare Workers (main branch only)
      - name: Deploy to Cloudflare Workers
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  # Optional: PR preview deployments (can be triggered manually)
  preview:
    name: Preview Deployment
    runs-on: self-hosted
    needs: ci
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'preview')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Build and deploy preview
        run: |
          npm run build
          wrangler deploy --env preview-${{ github.event.pull_request.number }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployed to: https://examapp-preview-${prNumber}.workers.dev`
            });